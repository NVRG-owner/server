MistForum = MistForum or {}

local function consoleMessage(title, info) 
	print("------------------------------------")
	print("[MistForums]", title)
	
	for k,v in pairs( info ) do
		print("["..k.."]", v)
		print("------------------------------------")
	end
end

function MistForum:consoleMessage(title, info)
    if ( !info ) then
        info = {}
    end

    consoleMessage(title, info)
end


local function cleanData( data )
    if ( type(data) != 'table') then
        return data;
    end

	data = table.Copy( data )
	
	if ( data && data['ulx_roles'] ) then
		data['ulx_roles'] = "(minified) "..table.Count( util.JSONToTable( data['ulx_roles'] ) ).." records"
	end
	
	return util.TableToJSON(data)
end

function MistForum:writeError(data)
    file.CreateDir("mistforum_errors")

    local filePath = "mistforum_errors/http_"..os.date('%m_%d_%Y', os.time())..'_'..os.time()..".txt"

    file.Write(filePath, string.Replace(util.TableToJSON(data), ',', ',\r\n'));
end

function MistForum:post( offset, data, callback )
	data["api_key"] = MistForum['api_key']
	data["api_secret"] = MistForum['api_secret']
	data['game_server_id'] = MistForum['server'] and tostring( MistForum['server']['id'] ) or nil

	if ( string.sub(offset, 0, 1) == '/' ) then
		offset = string.sub(offset, 2, string.len(offset))
	end

	// http.Post requires all data to be strings.
	for k,v in pairs( data ) do
	    data[ k ] = tostring( v )
	end

	local urlPost = MistForum['url']..'/api/'..offset

	consoleMessage("Sending post request", {
		['URL'] = urlPost,
		['Data'] = cleanData( data )
	}) 

	http.Post( urlPost, data, function(body)
	    local response = util.JSONToTable( body )
		
	    if ( string.find( body, "<!DOCTYPE html>" ) ) then
			consoleMessage("Post request failed, no JSON response", {
				['URL'] = urlPost,
				['Error'] = 'Please open up your mistforum_errors folder in your data folder.'
			})

			MistForum:writeError({
                ['url'] = urlPost,
                ['response'] = cleanData( response ),
                ['data'] = cleanData( data ),
                ['body'] = body
            })

            return
        end

        if ( response == nil and body != "null" ) then
			consoleMessage("Post request failed, response couldn't be converted", {
				['URL'] = urlPost,
				['Error'] = body
			}) 

			MistForum:writeError({
                ['url'] = urlPost,
                ['data'] = cleanData( data ),
                ['response'] = cleanData( response ),
                ['body'] = body
            })

            return
		end
		
		if ( table.Count( response ) == 1 && response[1] ) then
			response = response[1]
		end

		if ( callback ) then
			callback( response )
		end
	end, 
	function( errorMessage )
		print("Couldnt query to mistforums with message: '"..errorMessage.."'")

        MistForum:writeError({
            ['url'] = urlPost,
            ['data'] = cleanData( data ),
            ['errorMsg'] = errorMessage
        })
	end)
end

// get the servers ip address since theres no offical way to do it with gmod alone.

MistForum.ipAddress = MistForum.ipAddress or "";

function MistForum:getServerIp()
	if ( MistForum.ipAddress != "" ) then
		return MistForum.ipAddress
	end
	
	MistForum.ipAddress = "loading"

	local hostip = GetConVarString( "hostip" ) -- GetConVarNumber is inaccurate
	
	if ( !hostip ) then
		consoleMessage("No hostip could be found", {})
		return;
	end
	
	hostip = tonumber( hostip )

	local ip = {}
	ip[ 1 ] = bit.rshift( bit.band( hostip, 0xFF000000 ), 24 )
	ip[ 2 ] = bit.rshift( bit.band( hostip, 0x00FF0000 ), 16 )
	ip[ 3 ] = bit.rshift( bit.band( hostip, 0x0000FF00 ), 8 )
	ip[ 4 ] = bit.band( hostip, 0x000000FF )

	local serverip = table.concat( ip, "." )

    MistForum.ipAddress = string.Trim( serverip )
    hook.Call("OnServerIP")
end